name: Checkov Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  checkov:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: List files
        run: ls -R

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Checkov
        run: pip install checkov

      - name: Add custom Checkov rule
        run: |
          echo "
          from checkov.common.models.enums import CheckCategories, CheckResult
          from checkov.json_doc.base_json_check import BaseJsonCheck
          from checkov.json_doc.registry import registry

          class CustomSCPCheck(BaseJsonCheck):
              def __init__(self):
                  name = 'Ensure CloudTrail is configured correctly in SCP'
                  id = 'CUSTOM_SCP_1'
                  supported_entities = ['Statement']
                  categories = [CheckCategories.IAM]
                  super().__init__(
                      name=name, id=id, categories=categories, supported_entities=supported_entities
                  )

              def scan_entity_conf(self, conf, entity_type):
                  if 'Sid' in conf:
                      if conf['Sid'] == 'RequireMultiRegionTrailWithReadAndWriteManagementEvents':
                          if not (conf['Condition'].get('StringEquals') and 'cloudtrail:ManagementEventReadWriteType' in conf['Condition']['StringEquals'] and conf['Condition']['StringEquals']['cloudtrail:ManagementEventReadWriteType'] == ['All']):
                              return CheckResult.FAILED
                  return CheckResult.PASSED

          registry.register(CustomSCPCheck())
          " > custom_checkov_rule.py
          python custom_checkov_rule.py

      - name: Run Checkov scan
        run: |
          find . -name "*.json" -print0 | xargs -0 -I {} sh -c 'checkov -f {} || exit 1'
